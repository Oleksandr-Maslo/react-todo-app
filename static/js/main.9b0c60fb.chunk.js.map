{"version":3,"sources":["types/Filter.ts","components/TodoItem.tsx","components/TodosContext.tsx","components/TodoList.tsx","components/TodosHeader.tsx","components/TodosFilter.tsx","components/TodosFooter.tsx","App.tsx","hooks/useLocalStorage.tsx","index.tsx"],"names":["TodosFilterEnum","TodoItem","todo","todos","setTodos","useState","editableTodoId","setEditableTodoId","title","newTitle","setNewTitle","deleteTodo","todoId","newTodos","filter","currentTodo","id","editTodo","todoChange","trim","length","map","data-id","className","classNames","completed","editing","onDoubleClick","type","checked","onChange","changeChecked","htmlFor","data-cy","onClick","value","e","target","onBlur","onKeyDown","key","autoFocus","TodosContext","React","createContext","filteredTodos","filterType","ALL","setFilterType","TodoList","useContext","some","item","toggleTodos","defaultChecked","every","TodosHeader","setTitle","Date","onSubmit","preventDefault","newTodo","addTodo","placeholder","TodosFilter","makeSetFilterType","href","ACTIVE","COMPLETED","TodosFooter","App","startValue","data","localStorage","getItem","JSON","parse","setValue","newValue","setItem","stringify","useLocalStorage","showFooter","toFilter","Provider","container","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.9b0c60fb.chunk.js","sourcesContent":["export enum TodosFilterEnum {\n  ALL,\n  ACTIVE,\n  COMPLETED,\n}\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../types/Todo';\n\ntype Props = {\n  todo: Todo,\n  todos: Todo[],\n  setTodos: (newValue: Todo[]) => void,\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  todos,\n  setTodos,\n}) => {\n  const [editableTodoId, setEditableTodoId] = useState<number | null>(null);\n  const [newTitle, setNewTitle] = useState(todo.title);\n\n  function changeChecked(todoChange: Todo) {\n    const newTodos = todos.map((currentTodo) => {\n      if (currentTodo.id === todoChange.id) {\n        return {\n          ...currentTodo,\n          completed: !todoChange.completed,\n        };\n      }\n\n      return currentTodo;\n    });\n\n    setTodos(newTodos);\n  }\n\n  function deleteTodo(todoId: number) {\n    const newTodos = todos.filter((currentTodo) => (\n      currentTodo.id !== todoId));\n\n    setTodos(newTodos);\n  }\n\n  function editTodo(todoChange: Todo) {\n    let newTodos;\n\n    if (newTitle === todoChange.title) {\n      setEditableTodoId(null);\n\n      return;\n    }\n\n    if (newTitle.trim().length > 0) {\n      newTodos = todos.map((currentTodo) => {\n        if (currentTodo.id === todoChange.id) {\n          return {\n            ...currentTodo,\n            title: newTitle,\n          };\n        }\n\n        return currentTodo;\n      });\n    } else {\n      deleteTodo(todo.id);\n\n      return;\n    }\n\n    setTodos(newTodos);\n    setEditableTodoId(null);\n  }\n\n  return (\n    <li\n      data-id={todo.id}\n      className={classNames({\n        completed: todo.completed,\n        editing: todo.id === editableTodoId,\n      })}\n      onDoubleClick={() => setEditableTodoId(todo.id)}\n    >\n\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id=\"toggle-view\"\n          checked={todo.completed}\n          onChange={() => changeChecked(todo)}\n        />\n\n        <label htmlFor=\"title\">\n          <div id=\"title\">\n            {todo.title}\n          </div>\n        </label>\n\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          data-cy=\"deleteTodo\"\n          onClick={() => deleteTodo(todo.id)}\n        />\n      </div>\n      {todo.id === editableTodoId && (\n        <input\n          type=\"text\"\n          className=\"edit\"\n          value={newTitle}\n          onChange={(e) => setNewTitle(e.target.value)}\n          onBlur={() => editTodo(todo)}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') {\n              editTodo(todo);\n            }\n\n            if (e.key === 'Escape') {\n              setEditableTodoId(null);\n            }\n          }}\n          // eslint-disable-next-line\n          autoFocus\n        />\n      )}\n    </li>\n  );\n};\n","import React from 'react';\nimport { TodosContextProps } from '../types/TodosContextProps';\nimport { TodosFilterEnum } from '../types/Filter';\n\nexport const TodosContext = React.createContext<TodosContextProps>({\n  todos: [],\n  filteredTodos: [],\n  filterType: TodosFilterEnum.ALL,\n  setTodos: () => {},\n  setFilterType: () => {},\n});\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useContext } from 'react';\nimport { TodoItem } from './TodoItem';\nimport { TodosContext } from './TodosContext';\n\nexport const TodoList: React.FC = () => {\n  const { filteredTodos, todos, setTodos } = useContext(TodosContext);\n\n  const toggleTodos = () => {\n    let newTodos;\n\n    if (todos.some((item) => !item.completed)) {\n      newTodos = todos.map((item) => {\n        if (!item.completed) {\n          return {\n            ...item,\n            completed: true,\n          };\n        }\n\n        return item;\n      });\n    } else {\n      newTodos = todos.map((item) => {\n        return {\n          ...item,\n          completed: false,\n        };\n      });\n    }\n\n    setTodos(newTodos);\n  };\n\n  return (\n    <section className=\"main\">\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        data-cy=\"toggleAll\"\n        onClick={() => toggleTodos()}\n        defaultChecked={todos.every((item) => item.completed)}\n      />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n      <ul className=\"todo-list\" data-cy=\"todosList\">\n        {filteredTodos.map((todo) => (\n          <TodoItem\n            key={todo.id}\n            todos={todos}\n            todo={todo}\n            setTodos={setTodos}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n};\n","import React, { useState, useContext } from 'react';\nimport { Todo } from '../types/Todo';\nimport { TodosContext } from './TodosContext';\n\nexport const TodosHeader: React.FC = () => {\n  const { todos, setTodos } = useContext(TodosContext);\n\n  const [title, setTitle] = useState('');\n  const id = +new Date();\n  const completed = false;\n\n  function addTodo() {\n    if (title.trim().length) {\n      const newTodo: Todo = {\n        title,\n        id,\n        completed,\n      };\n\n      setTodos([...todos, newTodo]);\n      setTitle('');\n    }\n  }\n\n  return (\n    <header className=\"header\">\n      <h1>todos</h1>\n\n      <form onSubmit={(e) => {\n        e.preventDefault();\n        addTodo();\n      }}\n      >\n\n        <input\n          type=\"text\"\n          data-cy=\"createTodo\"\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n      </form>\n    </header>\n  );\n};\n","import React, { useContext } from 'react';\nimport { TodosFilterEnum } from '../types/Filter';\nimport { TodosContext } from './TodosContext';\n\nexport const TodosFilter: React.FC = () => {\n  const { filterType, setFilterType } = useContext(TodosContext);\n  const makeSetFilterType = (type: TodosFilterEnum) => (\n    () => setFilterType(type));\n\n  return (\n    <ul className=\"filters\" data-cy=\"todosFilter\">\n      <li>\n        <a\n          href=\"#/\"\n          className={filterType === TodosFilterEnum.ALL ? 'selected' : ''}\n          onClick={makeSetFilterType(TodosFilterEnum.ALL)}\n        >\n          All\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/active\"\n          className={filterType === TodosFilterEnum.ACTIVE ? 'selected' : ''}\n          onClick={makeSetFilterType(TodosFilterEnum.ACTIVE)}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          className={filterType === TodosFilterEnum.COMPLETED ? 'selected' : ''}\n          onClick={makeSetFilterType(TodosFilterEnum.COMPLETED)}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useContext } from 'react';\nimport { TodosContext } from './TodosContext';\nimport { TodosFilter } from './TodosFilter';\n\nexport const TodosFooter: React.FC = () => {\n  const {\n    todos,\n    setTodos,\n  } = useContext(TodosContext);\n\n  function clearCompleted() {\n    const newTodos = todos.filter((item) => !item.completed);\n\n    setTodos(newTodos);\n  }\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\" data-cy=\"todosCounter\">\n        {`${todos.filter((item) => !item.completed).length} items left`}\n      </span>\n\n      <TodosFilter />\n\n      {todos.some((todo) => todo.completed) && (\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={clearCompleted}\n        >\n          Clear completed\n        </button>\n      )}\n    </footer>\n  );\n};\n","import React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { TodosHeader } from './components/TodosHeader';\nimport { TodosFooter } from './components/TodosFooter';\nimport { useLocalStorage } from './hooks/useLocalStorage';\nimport { Todo } from './types/Todo';\nimport { TodosFilterEnum } from './types/Filter';\nimport { TodosContext } from './components/TodosContext';\n\nfunction filter(type: TodosFilterEnum, toFilter: Todo[]) {\n  switch (type) {\n    case TodosFilterEnum.ACTIVE:\n\n      return toFilter.filter((item) => !item.completed);\n    case TodosFilterEnum.COMPLETED:\n\n      return toFilter.filter((item) => item.completed);\n    case TodosFilterEnum.ALL:\n      return toFilter;\n\n    default: return toFilter;\n  }\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useLocalStorage('todos', []);\n  const [filterType, setFilterType] = useState<TodosFilterEnum>(TodosFilterEnum.ALL);\n  const showFooter = todos.length > 0;\n\n  const filteredTodos = filter(filterType, todos) || [];\n\n  return (\n    <div className=\"todoapp\">\n      <TodosContext.Provider value={{\n        todos,\n        filteredTodos,\n        filterType,\n        setTodos,\n        setFilterType,\n      }}\n      >\n\n        <TodosHeader />\n\n        {showFooter && (\n          <>\n            <TodoList />\n            <TodosFooter />\n          </>\n        )}\n\n      </TodosContext.Provider>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { Todo } from '../types/Todo';\n\nexport function useLocalStorage<T>(\n  key: string,\n  startValue: T,\n): [T, (newValue: Todo[]) => void] {\n  const [value, setValue] = useState(() => {\n    const data = localStorage.getItem(key);\n\n    if (!data) {\n      return startValue;\n    }\n\n    try {\n      return JSON.parse(data);\n    } catch {\n      return startValue;\n    }\n  });\n\n  const save = (newValue: Todo[]) => {\n    localStorage.setItem(key, JSON.stringify(newValue));\n    setValue(newValue);\n  };\n\n  return [value, save];\n}\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport { App } from './App';\n\nconst container = document.getElementById('root') as HTMLDivElement;\n\ncreateRoot(container).render(<App />);\n"],"sourceRoot":""}